{"remainingRequest":"E:\\StockForecast\\Guesssssss\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\StockForecast\\Guesssssss\\src\\components\\liked.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\StockForecast\\Guesssssss\\src\\components\\liked.vue","mtime":1560174627216},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            // 总数据\n            tableData:[],\n            // 默认显示第几页\n            currentPage:1,\n            // 总条数，根据接口获取数据长度(注意：这里不能为空)\n            totalCount:1,\n            // 个数选择器（可修改）\n            //pageSizes:[1,2,3,4],\n            // 默认每页显示的条数（可修改）\n            PageSize:5,\n           // maps: [],\n            stockinfo:'',\n            value: [],\n            arr:[]\n           /* filterMethod(query, item) {\n                return item.pinyin.indexOf(query) > -1;\n            }*/\n        };\n    },\n    props:{\n        maps:{\n            type:Array,\n            required:true\n        }\n    },\n    mounted(){\n        this.$nextTick(()=>{\n            //this.getAllStocks()\n            this.getUserStock()\n        })        },\n    watch: {\n        '$route' (to, from) {//监听路由变化，防止参数刷新而页面不刷新的情况。\n            this.$router.go(0);\n            //this.handleCurrentChange(this.val)\n        }\n    },\n    methods:{\n   /*     handleCurrentChange(val) {\n            this.$confirm('是否从收藏夹中移除该股票?', '提示', {\n                confirmButtonLoading: true,\n                showCancelButton: true,\n                type: 'warning',\n                confirmCallBack:({confirmButtonLoadingClose,close})=>\n                {\n                    //del likedStock\n                    this.$api.stock.delLikedStock({//post请求发送到searchStock\n                        stockNum:val.stockId,\n                        email:sessionStorage.getItem('username')\n                    }).then((res)=>{\n                        if(res.data.status=='0'){\n                            this.$alert(res.data.message);\n                            this.getUserStock();\n\n                        }else {\n                            this.$message.error(res.data.message);\n                        }\n                    })\n                }\n        },*/\n        handleCurrentChange(val) {\n            const h = this.$createElement;\n            this.$msgbox({\n                title: '提示',\n                message: '是否确认将该股票从收藏夹中移除？',\n                showCancelButton: true,\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                beforeClose: (action, instance, done) => {\n                    if (action === 'confirm') {\n                        instance.confirmButtonLoading = true;\n                        instance.confirmButtonText = '执行中...';\n                        //del likedStock\n\n                        this.$api.stock.delLikedStock({//post请求发送到searchStock\n                            stockNum:val.stockId,\n                            email:sessionStorage.getItem('username')\n                        }).then((res)=>{\n                            if(res.data.status=='0'){\n                                this.$alert(res.data.message);\n                                this.getUserStock();\n\n                            }else {\n                                this.$message.error(res.data.message);\n                            }\n\n                        })\n                        setTimeout(() => {\n                            done();\n                            setTimeout(() => {\n                                instance.confirmButtonLoading = false;\n                            }, 300);\n                        }, 3000);\n                    } else {\n                        done();\n                    }\n                }\n            }).then(action => {\n                this.$message({\n                    type: 'info',\n                    message: 'action: ' + action\n                });\n            });\n        },\n        getUserStock(){\n            this.$api.stock.stockFavorite({\n                email:sessionStorage.getItem(\"username\")\n            }).then(({data})=>{\n                if(data.status=='0'){\n                    this.tableData=[];\n                    var jsonObj=JSON.parse(data.content);\n                    this.totalCount=jsonObj.length\n                    for (var i = 0; i < jsonObj.length; i++) {\n                        var record = jsonObj[i];\n                        var stockId = record['stockId'];\n                        var stockName = record['stockName'];\n                        this.tableData.push({\n                            stockId: stockId,\n                            stockName: stockName,\n                        });\n                    }\n\n                }else {\n                    this.$message.error(data.message);\n                }\n            })\n        },\n        // 分页\n        // 每页显示的条数\n        handleSizeChange(val) {\n            // 改变每页显示的条数\n            this.PageSize=val\n            // 注意：在改变每页显示的条数时，要将页码显示到第一页\n            this.currentPage=1\n        },\n        // 显示第几页\n        handlesCurrentChange(val) {\n            // 改变默认的页数\n            this.currentPage=val\n        },\n\n        addFavorite(value){\n            //add likedStock\n            let str_value=\"\";\n            for(let i=0;i<value.length;i++)\n            {\n                str_value=value[i]+\",\"+str_value+\"\"\n            }\n            //   for (let i = 0; i < movedKeys.length; i++)\n            this.$api.stock.addLikedStock({//post请求发送到searchStock\n                stockNum:str_value,\n                email:sessionStorage.getItem('username')\n            }).then((res)=>{\n                if(res.data.status=='0'){\n                   // this.$alert(res.data.message);\n                    this.getUserStock();\n\n                }else {\n                    this.$message.error(res.data.message);\n                }\n\n            })\n        },\n     /*   handleChange(value, direction, movedKeys) {\n            //this.$alert(value+\";\")\n            //value是右边穿梭框的key\n            //direction是穿梭方向\n            //movedKeys是当前穿梭的值\n          //  this.$alert(movedKeys);\n           // let movedKeysMap=movedKeys.split(\",\");\n            if(direction==\"right\")\n            {\n                //add likedStock\n\n             //   for (let i = 0; i < movedKeys.length; i++)\n                this.$api.stock.addLikedStock({//post请求发送到searchStock\n                    stockNum:movedKeys+\"\",\n                    email:sessionStorage.getItem('username')\n                }).then((res)=>{\n                    if(res.data.status=='0'){\n                        this.$alert(res.data.message);\n                        this.getUserStock();\n\n                    }else {\n                        this.$message.error(res.data.message);\n                    }\n\n                })\n            }else{\n                //del likedStock\n\n                this.$api.stock.delLikedStock({//post请求发送到searchStock\n                    stockNum:movedKeys+\"\",\n                    email:sessionStorage.getItem('username')\n                }).then((res)=>{\n                    if(res.data.status=='0'){\n                        this.$alert(res.data.message);\n                        this.getUserStock();\n\n                    }else {\n                        this.$message.error(res.data.message);\n                    }\n\n                })\n            }\n        },*/\n\n\n    }\n};\n",{"version":3,"sources":["liked.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA","file":"liked.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"center\">\r\n<div class=\"choose\">\r\n   <!-- <el-transfer\r\n            filterable\r\n            :filter-method=\"filterMethod\"\r\n            filter-placeholder=\"输入股票名称\"\r\n            :titles=\"['所有股票', '新增收藏股票']\"\r\n            v-model=\"value\"\r\n            :data=\"maps\"\r\n            @change=\"handleChange\">\r\n    </el-transfer>-->\r\n        <el-select v-model=\"value\" multiple filterable placeholder=\"请选择股票\">\r\n            <el-option\r\n                    v-for=\"item in maps\"\r\n                    :key=\"item.key\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.key\">\r\n            </el-option>\r\n        </el-select>\r\n        <el-button  type=\"danger\" @click=\"addFavorite(value)\">\r\n            <loading v-if=\"load\"></loading>\r\n            <span v-else>Add</span>\r\n        </el-button>\r\n</div>\r\n        <el-table :data=\"tableData.slice((currentPage-1)*PageSize,currentPage*PageSize)\"\r\n                  style=\"width: 100%\"\r\n                  highlight-current-row\r\n                  @current-change=\"handleCurrentChange\">\r\n\r\n            <el-table-column prop=\"stockId\" label=\"股票代码\" ></el-table-column>\r\n            <el-table-column prop=\"stockName\" label=\"股票名称\" ></el-table-column>\r\n        </el-table>\r\n        <div class=\"tabListPage\">\r\n            <el-pagination @size-change=\"handleSizeChange\"\r\n                           @current-change=\"handlesCurrentChange\"\r\n                           :current-page=\"currentPage\"\r\n                           :page-sizes=\"pageSizes\"\r\n                           :page-size=\"PageSize\" layout=\"total, prev, pager, next, jumper\"\r\n                           :total=\"totalCount\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                // 总数据\r\n                tableData:[],\r\n                // 默认显示第几页\r\n                currentPage:1,\r\n                // 总条数，根据接口获取数据长度(注意：这里不能为空)\r\n                totalCount:1,\r\n                // 个数选择器（可修改）\r\n                //pageSizes:[1,2,3,4],\r\n                // 默认每页显示的条数（可修改）\r\n                PageSize:5,\r\n               // maps: [],\r\n                stockinfo:'',\r\n                value: [],\r\n                arr:[]\r\n               /* filterMethod(query, item) {\r\n                    return item.pinyin.indexOf(query) > -1;\r\n                }*/\r\n            };\r\n        },\r\n        props:{\r\n            maps:{\r\n                type:Array,\r\n                required:true\r\n            }\r\n        },\r\n        mounted(){\r\n            this.$nextTick(()=>{\r\n                //this.getAllStocks()\r\n                this.getUserStock()\r\n            })        },\r\n        watch: {\r\n            '$route' (to, from) {//监听路由变化，防止参数刷新而页面不刷新的情况。\r\n                this.$router.go(0);\r\n                //this.handleCurrentChange(this.val)\r\n            }\r\n        },\r\n        methods:{\r\n       /*     handleCurrentChange(val) {\r\n                this.$confirm('是否从收藏夹中移除该股票?', '提示', {\r\n                    confirmButtonLoading: true,\r\n                    showCancelButton: true,\r\n                    type: 'warning',\r\n                    confirmCallBack:({confirmButtonLoadingClose,close})=>\r\n                    {\r\n                        //del likedStock\r\n                        this.$api.stock.delLikedStock({//post请求发送到searchStock\r\n                            stockNum:val.stockId,\r\n                            email:sessionStorage.getItem('username')\r\n                        }).then((res)=>{\r\n                            if(res.data.status=='0'){\r\n                                this.$alert(res.data.message);\r\n                                this.getUserStock();\r\n\r\n                            }else {\r\n                                this.$message.error(res.data.message);\r\n                            }\r\n                        })\r\n                    }\r\n            },*/\r\n            handleCurrentChange(val) {\r\n                const h = this.$createElement;\r\n                this.$msgbox({\r\n                    title: '提示',\r\n                    message: '是否确认将该股票从收藏夹中移除？',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    beforeClose: (action, instance, done) => {\r\n                        if (action === 'confirm') {\r\n                            instance.confirmButtonLoading = true;\r\n                            instance.confirmButtonText = '执行中...';\r\n                            //del likedStock\r\n\r\n                            this.$api.stock.delLikedStock({//post请求发送到searchStock\r\n                                stockNum:val.stockId,\r\n                                email:sessionStorage.getItem('username')\r\n                            }).then((res)=>{\r\n                                if(res.data.status=='0'){\r\n                                    this.$alert(res.data.message);\r\n                                    this.getUserStock();\r\n\r\n                                }else {\r\n                                    this.$message.error(res.data.message);\r\n                                }\r\n\r\n                            })\r\n                            setTimeout(() => {\r\n                                done();\r\n                                setTimeout(() => {\r\n                                    instance.confirmButtonLoading = false;\r\n                                }, 300);\r\n                            }, 3000);\r\n                        } else {\r\n                            done();\r\n                        }\r\n                    }\r\n                }).then(action => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: 'action: ' + action\r\n                    });\r\n                });\r\n            },\r\n            getUserStock(){\r\n                this.$api.stock.stockFavorite({\r\n                    email:sessionStorage.getItem(\"username\")\r\n                }).then(({data})=>{\r\n                    if(data.status=='0'){\r\n                        this.tableData=[];\r\n                        var jsonObj=JSON.parse(data.content);\r\n                        this.totalCount=jsonObj.length\r\n                        for (var i = 0; i < jsonObj.length; i++) {\r\n                            var record = jsonObj[i];\r\n                            var stockId = record['stockId'];\r\n                            var stockName = record['stockName'];\r\n                            this.tableData.push({\r\n                                stockId: stockId,\r\n                                stockName: stockName,\r\n                            });\r\n                        }\r\n\r\n                    }else {\r\n                        this.$message.error(data.message);\r\n                    }\r\n                })\r\n            },\r\n            // 分页\r\n            // 每页显示的条数\r\n            handleSizeChange(val) {\r\n                // 改变每页显示的条数\r\n                this.PageSize=val\r\n                // 注意：在改变每页显示的条数时，要将页码显示到第一页\r\n                this.currentPage=1\r\n            },\r\n            // 显示第几页\r\n            handlesCurrentChange(val) {\r\n                // 改变默认的页数\r\n                this.currentPage=val\r\n            },\r\n\r\n            addFavorite(value){\r\n                //add likedStock\r\n                let str_value=\"\";\r\n                for(let i=0;i<value.length;i++)\r\n                {\r\n                    str_value=value[i]+\",\"+str_value+\"\"\r\n                }\r\n                //   for (let i = 0; i < movedKeys.length; i++)\r\n                this.$api.stock.addLikedStock({//post请求发送到searchStock\r\n                    stockNum:str_value,\r\n                    email:sessionStorage.getItem('username')\r\n                }).then((res)=>{\r\n                    if(res.data.status=='0'){\r\n                       // this.$alert(res.data.message);\r\n                        this.getUserStock();\r\n\r\n                    }else {\r\n                        this.$message.error(res.data.message);\r\n                    }\r\n\r\n                })\r\n            },\r\n         /*   handleChange(value, direction, movedKeys) {\r\n                //this.$alert(value+\";\")\r\n                //value是右边穿梭框的key\r\n                //direction是穿梭方向\r\n                //movedKeys是当前穿梭的值\r\n              //  this.$alert(movedKeys);\r\n               // let movedKeysMap=movedKeys.split(\",\");\r\n                if(direction==\"right\")\r\n                {\r\n                    //add likedStock\r\n\r\n                 //   for (let i = 0; i < movedKeys.length; i++)\r\n                    this.$api.stock.addLikedStock({//post请求发送到searchStock\r\n                        stockNum:movedKeys+\"\",\r\n                        email:sessionStorage.getItem('username')\r\n                    }).then((res)=>{\r\n                        if(res.data.status=='0'){\r\n                            this.$alert(res.data.message);\r\n                            this.getUserStock();\r\n\r\n                        }else {\r\n                            this.$message.error(res.data.message);\r\n                        }\r\n\r\n                    })\r\n                }else{\r\n                    //del likedStock\r\n\r\n                    this.$api.stock.delLikedStock({//post请求发送到searchStock\r\n                        stockNum:movedKeys+\"\",\r\n                        email:sessionStorage.getItem('username')\r\n                    }).then((res)=>{\r\n                        if(res.data.status=='0'){\r\n                            this.$alert(res.data.message);\r\n                            this.getUserStock();\r\n\r\n                        }else {\r\n                            this.$message.error(res.data.message);\r\n                        }\r\n\r\n                    })\r\n                }\r\n            },*/\r\n\r\n\r\n        }\r\n    };\r\n</script>\r\n\r\n<<style lang='scss' scoped>\r\n    .center{\r\n       // position:relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        .choose {\r\n            display: inline;\r\n\r\n\r\n            .el-select {\r\n                //    position:absolute;\r\n\r\n                display: inline-block;\r\n            }\r\n\r\n            .el-button {\r\n                //   position:absolute;\r\n\r\n                display: inline-block;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"]}]}