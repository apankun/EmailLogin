{"remainingRequest":"E:\\StockForecast\\Guesssssss-bak\\node_modules\\babel-loader\\lib\\index.js!E:\\StockForecast\\Guesssssss-bak\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\StockForecast\\Guesssssss-bak\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\StockForecast\\Guesssssss-bak\\src\\components\\liked.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\StockForecast\\Guesssssss-bak\\src\\components\\liked.vue","mtime":1560174627216},{"path":"E:\\StockForecast\\Guesssssss-bak\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss-bak\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss-bak\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss-bak\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      // 总数据\n      tableData: [],\n      // 默认显示第几页\n      currentPage: 1,\n      // 总条数，根据接口获取数据长度(注意：这里不能为空)\n      totalCount: 1,\n      // 个数选择器（可修改）\n      //pageSizes:[1,2,3,4],\n      // 默认每页显示的条数（可修改）\n      PageSize: 5,\n      // maps: [],\n      stockinfo: '',\n      value: [],\n      arr: []\n      /* filterMethod(query, item) {\n           return item.pinyin.indexOf(query) > -1;\n       }*/\n\n    };\n  },\n  props: {\n    maps: {\n      type: Array,\n      required: true\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      //this.getAllStocks()\n      _this.getUserStock();\n    });\n  },\n  watch: {\n    '$route': function $route(to, from) {\n      //监听路由变化，防止参数刷新而页面不刷新的情况。\n      this.$router.go(0); //this.handleCurrentChange(this.val)\n    }\n  },\n  methods: {\n    /*     handleCurrentChange(val) {\n             this.$confirm('是否从收藏夹中移除该股票?', '提示', {\n                 confirmButtonLoading: true,\n                 showCancelButton: true,\n                 type: 'warning',\n                 confirmCallBack:({confirmButtonLoadingClose,close})=>\n                 {\n                     //del likedStock\n                     this.$api.stock.delLikedStock({//post请求发送到searchStock\n                         stockNum:val.stockId,\n                         email:sessionStorage.getItem('username')\n                     }).then((res)=>{\n                         if(res.data.status=='0'){\n                             this.$alert(res.data.message);\n                             this.getUserStock();\n                          }else {\n                             this.$message.error(res.data.message);\n                         }\n                     })\n                 }\n         },*/\n    handleCurrentChange: function handleCurrentChange(val) {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      this.$msgbox({\n        title: '提示',\n        message: '是否确认将该股票从收藏夹中移除？',\n        showCancelButton: true,\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        beforeClose: function beforeClose(action, instance, done) {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true;\n            instance.confirmButtonText = '执行中...'; //del likedStock\n\n            _this2.$api.stock.delLikedStock({\n              //post请求发送到searchStock\n              stockNum: val.stockId,\n              email: sessionStorage.getItem('username')\n            }).then(function (res) {\n              if (res.data.status == '0') {\n                _this2.$alert(res.data.message);\n\n                _this2.getUserStock();\n              } else {\n                _this2.$message.error(res.data.message);\n              }\n            });\n\n            setTimeout(function () {\n              done();\n              setTimeout(function () {\n                instance.confirmButtonLoading = false;\n              }, 300);\n            }, 3000);\n          } else {\n            done();\n          }\n        }\n      }).then(function (action) {\n        _this2.$message({\n          type: 'info',\n          message: 'action: ' + action\n        });\n      });\n    },\n    getUserStock: function getUserStock() {\n      var _this3 = this;\n\n      this.$api.stock.stockFavorite({\n        email: sessionStorage.getItem(\"username\")\n      }).then(function (_ref) {\n        var data = _ref.data;\n\n        if (data.status == '0') {\n          _this3.tableData = [];\n          var jsonObj = JSON.parse(data.content);\n          _this3.totalCount = jsonObj.length;\n\n          for (var i = 0; i < jsonObj.length; i++) {\n            var record = jsonObj[i];\n            var stockId = record['stockId'];\n            var stockName = record['stockName'];\n\n            _this3.tableData.push({\n              stockId: stockId,\n              stockName: stockName\n            });\n          }\n        } else {\n          _this3.$message.error(data.message);\n        }\n      });\n    },\n    // 分页\n    // 每页显示的条数\n    handleSizeChange: function handleSizeChange(val) {\n      // 改变每页显示的条数\n      this.PageSize = val; // 注意：在改变每页显示的条数时，要将页码显示到第一页\n\n      this.currentPage = 1;\n    },\n    // 显示第几页\n    handlesCurrentChange: function handlesCurrentChange(val) {\n      // 改变默认的页数\n      this.currentPage = val;\n    },\n    addFavorite: function addFavorite(value) {\n      var _this4 = this;\n\n      //add likedStock\n      var str_value = \"\";\n\n      for (var i = 0; i < value.length; i++) {\n        str_value = value[i] + \",\" + str_value + \"\";\n      } //   for (let i = 0; i < movedKeys.length; i++)\n\n\n      this.$api.stock.addLikedStock({\n        //post请求发送到searchStock\n        stockNum: str_value,\n        email: sessionStorage.getItem('username')\n      }).then(function (res) {\n        if (res.data.status == '0') {\n          // this.$alert(res.data.message);\n          _this4.getUserStock();\n        } else {\n          _this4.$message.error(res.data.message);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["liked.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"center\">\r\n<div class=\"choose\">\r\n   <!-- <el-transfer\r\n            filterable\r\n            :filter-method=\"filterMethod\"\r\n            filter-placeholder=\"输入股票名称\"\r\n            :titles=\"['所有股票', '新增收藏股票']\"\r\n            v-model=\"value\"\r\n            :data=\"maps\"\r\n            @change=\"handleChange\">\r\n    </el-transfer>-->\r\n        <el-select v-model=\"value\" multiple filterable placeholder=\"请选择股票\">\r\n            <el-option\r\n                    v-for=\"item in maps\"\r\n                    :key=\"item.key\"\r\n                    :label=\"item.label\"\r\n                    :value=\"item.key\">\r\n            </el-option>\r\n        </el-select>\r\n        <el-button  type=\"danger\" @click=\"addFavorite(value)\">\r\n            <loading v-if=\"load\"></loading>\r\n            <span v-else>Add</span>\r\n        </el-button>\r\n</div>\r\n        <el-table :data=\"tableData.slice((currentPage-1)*PageSize,currentPage*PageSize)\"\r\n                  style=\"width: 100%\"\r\n                  highlight-current-row\r\n                  @current-change=\"handleCurrentChange\">\r\n\r\n            <el-table-column prop=\"stockId\" label=\"股票代码\" ></el-table-column>\r\n            <el-table-column prop=\"stockName\" label=\"股票名称\" ></el-table-column>\r\n        </el-table>\r\n        <div class=\"tabListPage\">\r\n            <el-pagination @size-change=\"handleSizeChange\"\r\n                           @current-change=\"handlesCurrentChange\"\r\n                           :current-page=\"currentPage\"\r\n                           :page-sizes=\"pageSizes\"\r\n                           :page-size=\"PageSize\" layout=\"total, prev, pager, next, jumper\"\r\n                           :total=\"totalCount\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                // 总数据\r\n                tableData:[],\r\n                // 默认显示第几页\r\n                currentPage:1,\r\n                // 总条数，根据接口获取数据长度(注意：这里不能为空)\r\n                totalCount:1,\r\n                // 个数选择器（可修改）\r\n                //pageSizes:[1,2,3,4],\r\n                // 默认每页显示的条数（可修改）\r\n                PageSize:5,\r\n               // maps: [],\r\n                stockinfo:'',\r\n                value: [],\r\n                arr:[]\r\n               /* filterMethod(query, item) {\r\n                    return item.pinyin.indexOf(query) > -1;\r\n                }*/\r\n            };\r\n        },\r\n        props:{\r\n            maps:{\r\n                type:Array,\r\n                required:true\r\n            }\r\n        },\r\n        mounted(){\r\n            this.$nextTick(()=>{\r\n                //this.getAllStocks()\r\n                this.getUserStock()\r\n            })        },\r\n        watch: {\r\n            '$route' (to, from) {//监听路由变化，防止参数刷新而页面不刷新的情况。\r\n                this.$router.go(0);\r\n                //this.handleCurrentChange(this.val)\r\n            }\r\n        },\r\n        methods:{\r\n       /*     handleCurrentChange(val) {\r\n                this.$confirm('是否从收藏夹中移除该股票?', '提示', {\r\n                    confirmButtonLoading: true,\r\n                    showCancelButton: true,\r\n                    type: 'warning',\r\n                    confirmCallBack:({confirmButtonLoadingClose,close})=>\r\n                    {\r\n                        //del likedStock\r\n                        this.$api.stock.delLikedStock({//post请求发送到searchStock\r\n                            stockNum:val.stockId,\r\n                            email:sessionStorage.getItem('username')\r\n                        }).then((res)=>{\r\n                            if(res.data.status=='0'){\r\n                                this.$alert(res.data.message);\r\n                                this.getUserStock();\r\n\r\n                            }else {\r\n                                this.$message.error(res.data.message);\r\n                            }\r\n                        })\r\n                    }\r\n            },*/\r\n            handleCurrentChange(val) {\r\n                const h = this.$createElement;\r\n                this.$msgbox({\r\n                    title: '提示',\r\n                    message: '是否确认将该股票从收藏夹中移除？',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    beforeClose: (action, instance, done) => {\r\n                        if (action === 'confirm') {\r\n                            instance.confirmButtonLoading = true;\r\n                            instance.confirmButtonText = '执行中...';\r\n                            //del likedStock\r\n\r\n                            this.$api.stock.delLikedStock({//post请求发送到searchStock\r\n                                stockNum:val.stockId,\r\n                                email:sessionStorage.getItem('username')\r\n                            }).then((res)=>{\r\n                                if(res.data.status=='0'){\r\n                                    this.$alert(res.data.message);\r\n                                    this.getUserStock();\r\n\r\n                                }else {\r\n                                    this.$message.error(res.data.message);\r\n                                }\r\n\r\n                            })\r\n                            setTimeout(() => {\r\n                                done();\r\n                                setTimeout(() => {\r\n                                    instance.confirmButtonLoading = false;\r\n                                }, 300);\r\n                            }, 3000);\r\n                        } else {\r\n                            done();\r\n                        }\r\n                    }\r\n                }).then(action => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: 'action: ' + action\r\n                    });\r\n                });\r\n            },\r\n            getUserStock(){\r\n                this.$api.stock.stockFavorite({\r\n                    email:sessionStorage.getItem(\"username\")\r\n                }).then(({data})=>{\r\n                    if(data.status=='0'){\r\n                        this.tableData=[];\r\n                        var jsonObj=JSON.parse(data.content);\r\n                        this.totalCount=jsonObj.length\r\n                        for (var i = 0; i < jsonObj.length; i++) {\r\n                            var record = jsonObj[i];\r\n                            var stockId = record['stockId'];\r\n                            var stockName = record['stockName'];\r\n                            this.tableData.push({\r\n                                stockId: stockId,\r\n                                stockName: stockName,\r\n                            });\r\n                        }\r\n\r\n                    }else {\r\n                        this.$message.error(data.message);\r\n                    }\r\n                })\r\n            },\r\n            // 分页\r\n            // 每页显示的条数\r\n            handleSizeChange(val) {\r\n                // 改变每页显示的条数\r\n                this.PageSize=val\r\n                // 注意：在改变每页显示的条数时，要将页码显示到第一页\r\n                this.currentPage=1\r\n            },\r\n            // 显示第几页\r\n            handlesCurrentChange(val) {\r\n                // 改变默认的页数\r\n                this.currentPage=val\r\n            },\r\n\r\n            addFavorite(value){\r\n                //add likedStock\r\n                let str_value=\"\";\r\n                for(let i=0;i<value.length;i++)\r\n                {\r\n                    str_value=value[i]+\",\"+str_value+\"\"\r\n                }\r\n                //   for (let i = 0; i < movedKeys.length; i++)\r\n                this.$api.stock.addLikedStock({//post请求发送到searchStock\r\n                    stockNum:str_value,\r\n                    email:sessionStorage.getItem('username')\r\n                }).then((res)=>{\r\n                    if(res.data.status=='0'){\r\n                       // this.$alert(res.data.message);\r\n                        this.getUserStock();\r\n\r\n                    }else {\r\n                        this.$message.error(res.data.message);\r\n                    }\r\n\r\n                })\r\n            },\r\n         /*   handleChange(value, direction, movedKeys) {\r\n                //this.$alert(value+\";\")\r\n                //value是右边穿梭框的key\r\n                //direction是穿梭方向\r\n                //movedKeys是当前穿梭的值\r\n              //  this.$alert(movedKeys);\r\n               // let movedKeysMap=movedKeys.split(\",\");\r\n                if(direction==\"right\")\r\n                {\r\n                    //add likedStock\r\n\r\n                 //   for (let i = 0; i < movedKeys.length; i++)\r\n                    this.$api.stock.addLikedStock({//post请求发送到searchStock\r\n                        stockNum:movedKeys+\"\",\r\n                        email:sessionStorage.getItem('username')\r\n                    }).then((res)=>{\r\n                        if(res.data.status=='0'){\r\n                            this.$alert(res.data.message);\r\n                            this.getUserStock();\r\n\r\n                        }else {\r\n                            this.$message.error(res.data.message);\r\n                        }\r\n\r\n                    })\r\n                }else{\r\n                    //del likedStock\r\n\r\n                    this.$api.stock.delLikedStock({//post请求发送到searchStock\r\n                        stockNum:movedKeys+\"\",\r\n                        email:sessionStorage.getItem('username')\r\n                    }).then((res)=>{\r\n                        if(res.data.status=='0'){\r\n                            this.$alert(res.data.message);\r\n                            this.getUserStock();\r\n\r\n                        }else {\r\n                            this.$message.error(res.data.message);\r\n                        }\r\n\r\n                    })\r\n                }\r\n            },*/\r\n\r\n\r\n        }\r\n    };\r\n</script>\r\n\r\n<<style lang='scss' scoped>\r\n    .center{\r\n       // position:relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        .choose {\r\n            display: inline;\r\n\r\n\r\n            .el-select {\r\n                //    position:absolute;\r\n\r\n                display: inline-block;\r\n            }\r\n\r\n            .el-button {\r\n                //   position:absolute;\r\n\r\n                display: inline-block;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}