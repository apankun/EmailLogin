{"remainingRequest":"E:\\StockForecast\\Guesssssss\\node_modules\\thread-loader\\dist\\cjs.js!E:\\StockForecast\\Guesssssss\\node_modules\\babel-loader\\lib\\index.js!E:\\StockForecast\\Guesssssss\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\StockForecast\\Guesssssss\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\StockForecast\\Guesssssss\\src\\components\\resetpwd.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\StockForecast\\Guesssssss\\src\\components\\resetpwd.vue","mtime":1559823199035},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\StockForecast\\Guesssssss\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport loading from '../components/loading';\nexport default {\n  components: {\n    loading: loading\n  },\n  data: function data() {\n    var _this = this;\n\n    var checkold_pwd = function checkold_pwd(rule, value, callback) {\n      var reg = /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^[^\\s\\u4e00-\\u9fa5]{6,16}$/;\n\n      if (value === '') {\n        callback(new Error('旧密码不能为空'));\n      } else if (!reg.test(value)) {\n        callback(new Error('密码长度需6-16位，且包含字母和字符'));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      var reg = /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^[^\\s\\u4e00-\\u9fa5]{6,16}$/;\n\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (!reg.test(value)) {\n        callback(new Error('密码长度需6-16位，且包含字母和字符'));\n      } else {\n        if (_this.ruleForm.new_pwd_check !== '') {\n          _this.$refs.ruleForm.validateField('new_pwd_check');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.ruleForm.new_pwd) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        old_pwd: '',\n        new_pwd: '',\n        new_pwd_check: ''\n      },\n      rules: {\n        new_pwd: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        new_pwd_check: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        old_pwd: [{\n          validator: checkold_pwd,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm(formName) {\n      var _this2 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          //alert('submit!');\n          _this2.load = true;\n          console.log(_this2.ruleForm);\n\n          _this2.$api.user.resetpwd({\n            email: sessionStorage.getItem('username'),\n            old_pwd: _this2.ruleForm.old_pwd,\n            new_pwd: _this2.ruleForm.new_pwd\n          }).then(function (res) {\n            console.log(res);\n            _this2.load = false;\n\n            if (res.data.status == '0') {\n              _this2.$alert('修改密码成功！');\n\n              _this2.$refs[formName].resetFields();\n            } else {\n              _this2.$message.error(res.data.message);\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"sources":["resetpwd.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <el-form  :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"旧密码\" prop=\"old_pwd\">\r\n            <el-input type=\"password\" v-model.number=\"ruleForm.old_pwd\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"new_pwd\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.new_pwd\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认新密码\" prop=\"new_pwd_check\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.new_pwd_check\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n            <el-button type=\"danger\" @click=\"submitForm('ruleForm')\">确认修改</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">清空</el-button>\r\n        </el-form-item>\r\n    </el-form>\r\n</template>\r\n\r\n<script>\r\n    import loading from '../components/loading'\r\n\r\n    export default {\r\n        components:{loading},\r\n\r\n        data() {\r\n            var checkold_pwd = (rule, value, callback) => {\r\n                let reg = /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^[^\\s\\u4e00-\\u9fa5]{6,16}$/;\r\n                if (value === '') {\r\n                    callback(new Error('旧密码不能为空'));\r\n                } else if(!reg.test(value)){\r\n                    callback(new Error('密码长度需6-16位，且包含字母和字符'))\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n\r\n            var validatePass = (rule, value, callback) => {\r\n                let reg = /(?!^[0-9]+$)(?!^[A-z]+$)(?!^[^A-z0-9]+$)^[^\\s\\u4e00-\\u9fa5]{6,16}$/;\r\n                if (value === '') {\r\n                    callback(new Error('请输入密码'));\r\n                } else if(!reg.test(value)){\r\n                    callback(new Error('密码长度需6-16位，且包含字母和字符'))\r\n                } else {\r\n                    if (this.ruleForm.new_pwd_check !== '') {\r\n                        this.$refs.ruleForm.validateField('new_pwd_check');\r\n                    }\r\n                    callback();\r\n                }\r\n            };\r\n            var validatePass2 = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请再次输入密码'));\r\n                } else if (value !== this.ruleForm.new_pwd) {\r\n                    callback(new Error('两次输入密码不一致!'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            return {\r\n                ruleForm: {\r\n                    old_pwd: '',\r\n                    new_pwd: '',\r\n                    new_pwd_check: ''\r\n                },\r\n                rules: {\r\n                    new_pwd: [\r\n                        { validator: validatePass, trigger: 'blur' }\r\n                    ],\r\n                    new_pwd_check: [\r\n                        { validator: validatePass2, trigger: 'blur' }\r\n                    ],\r\n                    old_pwd: [\r\n                        { validator: checkold_pwd, trigger: 'blur' }\r\n                    ]\r\n                }\r\n            };\r\n        },\r\n        methods: {\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        //alert('submit!');\r\n                        this.load=true\r\n                        console.log(this.ruleForm)\r\n                        this.$api.user.resetpwd({\r\n                            email:sessionStorage.getItem('username'),\r\n                            old_pwd:this.ruleForm.old_pwd,\r\n                            new_pwd:this.ruleForm.new_pwd\r\n                        }).then((res)=>{\r\n                            console.log(res)\r\n                            this.load=false\r\n                            if(res.data.status=='0'){\r\n                                this.$alert('修改密码成功！');\r\n                                this.$refs[formName].resetFields();\r\n                            }else {\r\n                                this.$message.error(res.data.message);\r\n                            }\r\n                        })\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"sourceRoot":"src/components"}]}